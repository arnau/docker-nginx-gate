env JWT_SECRET;
env JWT_SECRET_IS_BASE64_ENCODED;

worker_processes 1;

events { worker_connections 1024; }

error_log /var/log/nginx/error.log debug;

http {
    sendfile off;
    lua_package_path '/etc/nginx/lua/?.lua;;';

    server {
        listen 80;
        default_type application/json;

        location / {
            # proxy_pass http://backend:5000/;
            access_by_lua_block {
              ngx.say('{"message": "open endpoint"}')
            }
        }

        location /sign {
          if ($request_method != "POST") {
            return 405;
          }

          access_by_lua_block {
            local jwt = require("guard")
            jwt.sign()
          }
        }

        location /secure {
            access_by_lua_block {
              local jwt = require("guard")
              jwt.auth()
              ngx.say('{"message": "secured endpoint"}')
            }

            # proxy_pass http://backend:5000/secure;
        }

        location /secure/admin {
            access_by_lua_block {
              local jwt = require("guard")
              jwt.auth({ sub = validators.opt_matches("^[a-z]+$"),
                         iss = validators.equals_any_of({"local", "guardian"}),
                         exp = validators.opt_is_not_expired() })
              ngx.say('{"message": "secured endpoint for admin"}')
            }

            # proxy_pass http://backend:5000/secure/admin;
        }
    }
}
